name: "Apps: Release"

on:
  push:
    branches:
      - 'master'
    tags-ignore:
      - '**'
    paths:
      - 'test/**'
      - '.github/workflows/apps.release.yaml'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_TOKEN }}
          path: master
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: truecharts/catalog
          token: ${{ secrets.BOT_TOKEN }}
          path: catalog
      - name: Remove if release already exists
        run: |
          for chart in master/test/*; do
            if [ -d "${chart}" ]; then
              maxchartversion=$(cat ${chart}/Chart.yaml | grep "^version: " | awk -F" " '{ print $2 }')
              chartname=$(basename ${chart})
              echo "Processing... cleanup-existing... Chart: ${chartname} - Version: ${maxchartversion}"

              rm -Rf catalog/test/${chartname}/${maxchartversion} || echo "Chart release ${chartname} with version ${maxchartversion} does not exist yet... Skipping..."
              rm -Rf catalog/test/${chartname}/item.yaml || echo "No old catalog item.yaml found for ${chartname}"
            fi
          done
      - name: Add Chart release
        run: |
          for chart in master/test/*; do
            if [ -d "${chart}" ]; then
              maxchartversion=$(cat ${chart}/Chart.yaml | grep "^version: " | awk -F" " '{ print $2 }')
              chartname=$(basename ${chart})
              echo "Processing... Copying charts... Chart: ${chartname} - Version: ${maxchartversion}"

              mkdir -p catalog/test/${chartname}/${maxchartversion}
              cp -Rf ${chart}/* catalog/test/${chartname}/${maxchartversion}/
              mv catalog/test/${chartname}/${maxchartversion}/item.yaml catalog/test/${chartname}/
            fi
          done
      - name: Apply SCALE Patches
        run: |
          for chart in catalog/test/*; do
            if [ -d "${chart}" ]; then
              maxfolderversion=$(ls -l ${chart} | grep ^d | awk '{print $9}' | tail -n 1)
              chartname=$(basename ${chart})
              path="${chart}/${maxfolderversion}"
              echo "Processing... Applying SCALE patch... Chart: ${chartname} - Version: ${maxfolderversion}"
              mv ${path}/SCALE/item.yaml catalog/test/${chartname}/
              mv ${path}/SCALE/ix_values.yaml ${path}/
              mv ${path}/SCALE/questions.yaml ${path}/
              cp -rf ${path}/SCALE/templates/* ${path}/templates
              rm -rf ${path}/SCALE/templates
              mv ${path}/values.yaml ${path}/test_values.yaml
              touch ${path}/values.yaml
              description=$(cat ${chart}/Chart.yaml | grep "^description: " | sed -r 's/^description: //')
              echo "${description}" >> ${path}/app-readme.md
            fi
          done
      - name: Commit and Push new App releases
        run: |
          cd catalog
          git config user.name "TrueCharts-Bot"
          git config user.email "bot@truecharts.org"
          git add --all
          git commit -sm "Commit new App releases for TrueCharts" || exit 0
          git push
